#!/bin/bash
###############################################################################################
# 		NAME: 			.MacMigrator.conf
#
# 		DESCRIPTION:  	Default configuration file for MacMigrator
#		
###############################################################################################
#		HISTORY:
#						- created by Zack Smith (zsmith@318.com)
###############################################################################################

#export DebugScript="Yes" ; set -x
export ScriptVersion="1.4"

# The company
export Company="Winnebago"

# Used for Identifier
export Identifier="com.github.winnebago"

# Mac Tmp user
export TMP_USER="macmigrate"

# Email Address for logs
export Email="changeme@localhost"

export SMTPServer="mailhost.example.com"

# Declare the project name
export ProjectName="Winnebago"

# Name of log to be stored in /Libarary/Logs/$Company/	
export LogName="$ProjectName.log"

# Path of log to be stored in /Libarary/Logs/$Company/
export LogFile="/Library/Logs/$Company/${LogName:=$0}"

# Casper Receipt File reference in script
export ReceiptFile="/Library/Receipts/$ProjectName"

# Default AD Domain
export DefaultDomain="ad.example.com"

# Default Centrify admin group name
export DefaultAdminGroup="Domain Admins"

# Z1 Need to add all DCs
# DCs used for validate
export DomainController0="ad.example.com"
export DomainController1="dc01.example.com"
export DomainController2="dc02.example.com"
export DomainController3="dc03.example.com"

# Default SearchBase
export DefaultSearchBase="dc=ad,dc=example,dc=com"

# Default AD Controller
export DefaultADController="ad.example.com"

# Default Centrify Bind Account Credentials
export BindAccount="adgonow"
export TheBindPassword='jfshkfhjkshfd'

# Updated password URL encoding as quick fix
export ShareUser="$BindAccount" # Remove the @domain
export SharePass="fjjslkfjsdjfl"	# Require this be set

# Used for Copying Log files (copyLogs.sh)
export LocalMount="/private/tmp/syslog"
export SharePoint='syslog'
export ShareServer="fileserver.foo.com"

# Used for getting User Picture attribute (getUserDetails.sh and checkBind.sh)
export LdapServer="ad.example.com"
export LdapServer2="ad.example.com"
export LdapBase="dc=ad,dc=example,dc=com"

# The tmp file we save our numeric install percentage to
export InstallProgressFile="/private/tmp/$Identifier.pleasewait.installprogress"

# This is the tmp file that we save our progress information to.
export InstallProgressTxt="/private/tmp/$Identifier.pleasewait.progress"

# This is the tmp file that we save our phase to ( bold text )
export InstallPhaseTxt="/private/tmp/$Identifier.pleasewait.phase"

###############################################################################
#       BEGIN BINDING CONFIGFILE										      #
###############################################################################

# REMOVE or comment THIS LINE
# export EXAMPLE="Remove This Line"

setSiteName(){ # Function for looking up the IP address and resolving its site and config type
statusMessage header "FUNCTION: #       ${FUNCNAME}" ; unset EXITVALUE
declare -i FUNCSECONDS="$SECONDS" # Capture strt time
declare OFFICE="OFF"
[ -n "$OVERRIDEIP" ] && statusMessage notice "OVERRIDE: Using IP: $OVERRIDEIP"
declare IPADDR="${OVERRIDEIP:-"$1"}"

case "${IPADDR:?"No IP has been resolved."}" in
# BEGIN IP BLOCK
# export IP_CUSTOM_NAME IP_NAME_FORMAT
		*)\
		export SITENAME="EXAMPLE" ;
		export CONFIG=0 ;
		export STYPE='Staff' ;
		export ADHOMEPROTO="smb" ;; 
esac
[ "${FUNCTIME:?}" != 0 ] &&
statusMessage verbose "TIME:${FUNCNAME}:Took ${FUNCTIME} seconds to EXIT:$EXITVALUE"
return 0
} # END setSiteName()
export KEEP_CURRENT_NAME="YES"

# User config.
export TIMEOUT="10" # Network timeout 1 Min default
export GTIMEOUT="600" # 5 mins
export ENOVERRIDE=0 # Always use the built in ethernet for the Name

# User configuration varibles
export NTPSERVER="time.example.com" # NTP server for the zone
export NTPTIMEOUT=10

###################################
# Active Directory Configurations #
###################################

export ADBIND="YES"		# ENABLE AD BINDING

export ADDOMAIN="$DefaultDomain"      # Fully qualified DNS domain for Active Directory 
export ADDOMNT="EXAMPLE"		# The NT style domain
export ADTIMEOUT="10"		# The timeout value written to the ADplugin
export ADBASEDN="$DefaultSearchBase"	# BASE DN for the OU (ADOU defined later)
export ADOU_FORMAT="OU=Macintosh,${ADBASEDN:?}"
			# %s SiteName 
			# %t Site Type
# this is the default for the AD plugin

# AD Bind DN User account
export KEEP_CURRENT_NAME="YES"
export ADBINDUDN="$BindAccount"	# Active Directory user with privs to bind to ou Note: single quotes
export ADBINDPASS="$TheBindPassword"
# Make sure to keep this lowercase otherwise ID will fail
# Static DNS server addresses
export ADDNS1="0.0.0.0"	# The Primary Active Directory DNS server to check against
export ADDNS2="0.0.0.0"	# The Secondary Active Directory DNS sevrer to check against

export ADALLDOMAIN="disable" # enable or disable automatic multi-domain authentication 
export ADLOCALHOME="enable" # enable or disable force home directory to local drive 
export ADMOBILE="enable"
	 # enable or disable mobile account support for offline logon 
export ADHOMEPROTO="${ADHOMEPROTO:=smb}"
export ADPREFCONFIRM="disable" # enable or disable warn the user that a mobile acct will be created 
export ADPREFUNCPATH="disable" # enable or disable use AD SMBHome attribute to determine the home dir 
export ADPREFSHELL="/bin/bash" # e.g., /bin/bash or "none"
export ADADMIN="$DefaultAdminGroup" # Admin group name
export AD_KEEP_NAME="NO"	# Use a current AD name if one is found in the config
export GUI="NO"	# Beta GUI support for intel display boxes, uncomment to test
export DNS_CHECK="NO"
# Naming converntions
export DELIMITER='-'


export LOCAL_HOST_NAME="`/usr/sbin/scutil --get LocalHostName`"
if [ ${#LOCAL_HOST_NAME} -le 15 ] ; then
  export NAME_FORMAT="${IP_NAME_FORMAT:="`/usr/sbin/scutil --get LocalHostName`"}"
  # Change to set yout automatic naming when run on netinstall
else
  export NAME_FORMAT="${IP_NAME_FORMAT:="M%d%m"}"
fi
	# %a asset-tag from firmware
	# %s Site Name based on IP block above
	# %c Computer Type "L" or "D"
	# %o OS version 10.4="T" or 10.5="L"
        # %m the mac address
	# %d Delimiter "-" but could be "_" w/o DNS
	# %n Custom Name, specified by the c/l arguments
export DNS_SUFFIX="${ADDOMAIN}"

# The following parameters are used for asset tag migration
export NAME_SOURCE="ComputerName"
export NAME_DELIMITER="-"
export NAME_POSTITION='$2'
# NME - $2 - EXAMPLE
export KILL_LOGIN_WINDOW="YES"
# Asset tag firmware and Apple Remote Desktop info
export ASSET_TAG_REQUIRED="NO"
export ASSET_TAG_KEY="asset-tag"
export ASSET_TAG_ARD="1" # Which field should set the asset-tag
export SET_TAG_IN_ARD="NO"
#################################
# Open Directory Configurations #
#################################
export ODBIND="NO" # Bind to OD
export AUTHODBIND="NO" # You authenticated binding?
export ODBINDADMIN=""
export ODBINDPASS=""
export ODTIMEOUT="20"	# Wait before failing over to Server Zero
# Open Directory Servers.
declare -ax ODSERVER[0]=""	# Failover server IP is okay
###############################################################################
#	END CONFIGFILE							      #
###############################################################################
